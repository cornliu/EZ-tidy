{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\ShelfTable1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableBody, Table, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Button } from '@material-ui/core';\nimport { AddItemDialog } from './AddItem';\nimport { locationData_Home } from '../testcases';\nconst defaultData = {\n  title: \"Loading...\",\n  locationlist: [],\n  itemlist: [],\n  path: \"/loading\",\n  template: \"ShelfTable\"\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  }\n}));\nexport function ShelfTable1(props) {\n  _s();\n\n  const classes = useStyles();\n  const [pageData, setPageData] = useState(defaultData);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogRef, setDialogRef] = useState(null);\n\n  const getData = async () => {\n    setPageData(await props.getData(props.path));\n    console.log(pageData);\n  };\n\n  useEffect(() => {\n    getData(props.path);\n  }, [props, dialogOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: pageData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setDialogOpen(true);\n        },\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddItemDialog, {\n        onClose: () => {\n          setDialogOpen(false);\n        },\n        open: dialogOpen,\n        currentPath: pageData.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pageData.itemlist.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.owner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShelfTable1, \"ZR+RoaFk2VX9VEamPrdfgfCs978=\", false, function () {\n  return [useStyles];\n});\n\n_c = ShelfTable1;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShelfTable1\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/ShelfTable1.js"],"names":["React","useEffect","useState","makeStyles","TableBody","Table","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Button","AddItemDialog","locationData_Home","defaultData","title","locationlist","itemlist","path","template","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","ShelfTable1","props","classes","pageData","setPageData","dialogOpen","setDialogOpen","dialogRef","setDialogRef","getData","console","log","table","map","row","index","name","time","owner"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { \r\n  TableBody, Table, TableCell, TableContainer, TableHead, \r\n  TableRow, Paper, Typography, Button \r\n} from '@material-ui/core'\r\nimport { AddItemDialog } from './AddItem';\r\nimport { locationData_Home } from '../testcases';\r\n\r\nconst defaultData = {\r\n  title: \"Loading...\",\r\n  locationlist: [],\r\n  itemlist: [],\r\n  path: \"/loading\",\r\n  template: \"ShelfTable\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ShelfTable1(props){\r\n  const classes = useStyles();\r\n  const [pageData, setPageData] = useState(defaultData);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogRef, setDialogRef] = useState(null)\r\n\r\n  const getData = async ()=>{\r\n    setPageData(await props.getData(props.path));\r\n    console.log(pageData);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getData(props.path);\r\n  }, [props, dialogOpen])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"h3\">{pageData.title}</Typography>\r\n        <Button onClick={()=>{setDialogOpen(true)}}>Add item</Button>\r\n        <AddItemDialog \r\n          onClose={()=>{setDialogOpen(false)}} \r\n          open={dialogOpen} \r\n          currentPath={pageData.path} />\r\n      </div>\r\n      <TableContainer component = {Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Item</TableCell>\r\n              <TableCell align=\"right\">Time</TableCell>\r\n              <TableCell align=\"right\">Owner</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {pageData.itemlist.map((row, index)=>(\r\n              <TableRow  key={index}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell align=\"right\">{row.time}</TableCell>\r\n                <TableCell align=\"right\">{row.owner}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}