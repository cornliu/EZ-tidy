{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\AddLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, TextField, DialogTitle, List, ListItem, InputAdornment, Button, DialogActions } from '@material-ui/core';\nimport { addLocationToServer } from '../Connection';\nimport { AuthContext } from '../contexts';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport function AddLocationDialog(props) {\n  _s();\n\n  const history = useHistory();\n  const {\n    onClose,\n    open\n  } = props;\n  const currentPath = history.location.pathname === \"/\" ? \"\" : history.location.pathname;\n  const [title, setTitle] = useState(\"\");\n  const [subpath, setSubPath] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const classes = useStyles();\n  const auth = React.useContext(AuthContext);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const getTimeString = () => {\n    const a = new Date();\n    const year = (\"0000\" + String(a.getFullYear())).slice(-4);\n    const month = (\"0000\" + String(a.getMonth() + 1)).slice(-2);\n    const day = (\"0000\" + String(a.getDay())).slice(-2);\n    const hour = (\"0000\" + String(a.getHours())).slice(-2);\n    const minute = (\"0000\" + String(a.getMinutes())).slice(-2);\n    const str = year + \"/\" + month + \"/\" + day + \" \" + hour + \":\" + minute;\n    console.log(str);\n    return str;\n  };\n\n  const handleConfirm = async () => {\n    const location = {\n      title: title,\n      path: currentPath + \"/\" + subpath,\n      description: description,\n      template: \"\",\n      time: getTimeString(),\n      username: auth.name,\n      parentpath: currentPath === \"\" ? \"/\" : currentPath\n    };\n    const {\n      status,\n      data\n    } = await addLocationToServer(location);\n    enqueueSnackbar(data, {\n      variant: status\n    });\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: () => {\n      onClose();\n    },\n    open: open,\n    className: classes.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"addlocation\",\n      children: \"Add Location Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"title\",\n          label: \"Title\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"path\",\n          label: \"Path\",\n          onChange: event => {\n            setSubPath(event.target.value);\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: currentPath + \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 31\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"description\",\n          label: \"Description\",\n          multiline: true,\n          onChange: event => {\n            setDescription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          handleConfirm();\n        },\n        color: \"primary\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddLocationDialog, \"Sd44tVHRJZ2CRO5Ds0sNHRCR2Vs=\", false, function () {\n  return [useHistory, useStyles, useSnackbar];\n});\n\n_c = AddLocationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationDialog\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/AddLocation.js"],"names":["React","useState","makeStyles","Dialog","TextField","DialogTitle","List","ListItem","InputAdornment","Button","DialogActions","addLocationToServer","AuthContext","useHistory","useSnackbar","useStyles","theme","dialog","flexWrap","margin","spacing","withoutLabel","marginTop","AddLocationDialog","props","history","onClose","open","currentPath","location","pathname","title","setTitle","subpath","setSubPath","description","setDescription","classes","auth","useContext","enqueueSnackbar","getTimeString","a","Date","year","String","getFullYear","slice","month","getMonth","day","getDay","hour","getHours","minute","getMinutes","str","console","log","handleConfirm","path","template","time","username","name","parentpath","status","data","variant","event","target","value","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Dialog, TextField, DialogTitle,\r\n  List, ListItem, InputAdornment, Button, DialogActions\r\n} from '@material-ui/core';\r\nimport { addLocationToServer } from '../Connection'\r\nimport { AuthContext } from '../contexts'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nexport function AddLocationDialog(props) {\r\n  const history = useHistory();\r\n  const { onClose, open } = props;\r\n  const currentPath = (history.location.pathname === \"/\") ? (\"\") : (history.location.pathname);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subpath, setSubPath] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const classes = useStyles();\r\n  const auth = React.useContext(AuthContext)\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const getTimeString = () => {\r\n    const a = new Date();\r\n    const year = (\"0000\" + String(a.getFullYear())).slice(-4)\r\n    const month = (\"0000\" + String(a.getMonth() + 1)).slice(-2)\r\n    const day = (\"0000\" + String(a.getDay())).slice(-2)\r\n    const hour = (\"0000\" + String(a.getHours())).slice(-2)\r\n    const minute = (\"0000\" + String(a.getMinutes())).slice(-2)\r\n    const str = year + \"/\" + month + \"/\" + day + \" \" + hour + \":\" + minute;\r\n    console.log(str);\r\n    return str\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    const location = {\r\n      title: title,\r\n      path: currentPath + \"/\" + subpath,\r\n      description: description,\r\n      template: \"\",\r\n      time: getTimeString(),\r\n      username: auth.name,\r\n      parentpath: currentPath === \"\" ? \"/\" : currentPath\r\n    };\r\n    const { status, data } = await addLocationToServer(location);\r\n    enqueueSnackbar(data, {variant: status});\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={() => { onClose() }} open={open} className={classes.dialog}>\r\n      <DialogTitle id=\"addlocation\">Add Location Here!</DialogTitle>\r\n      <List>\r\n        <ListItem>\r\n          <TextField fullWidth id=\"title\" label=\"Title\" onChange={(event) => { setTitle(event.target.value) }} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <TextField\r\n            id=\"path\"\r\n            label=\"Path\"\r\n            onChange={(event) => { setSubPath(event.target.value) }}\r\n            InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">{currentPath + \"/\"}</InputAdornment>\r\n            }} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <TextField\r\n            fullWidth\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            multiline\r\n            onChange={(event) => { setDescription(event.target.value) }} />\r\n        </ListItem>\r\n      </List>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => { handleConfirm() }}\r\n          color=\"primary\"\r\n        >Confirm</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}