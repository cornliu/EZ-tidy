{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\Location.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { locationData_Home, locationData_MKS } from '../testcases';\nimport { Card, CardActionArea, CardActions, CardContent, Typography } from '@material-ui/core';\nimport { AddLocationDialog } from './AddLocation';\nconst defaultData = {\n  title: \"Loading...\",\n  locationlist: [],\n  itemlist: [],\n  path: \"/loading\",\n  template: \"Location\"\n};\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: 'flex',\n    padding: theme.spacing(2),\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n    minHeight: 200,\n    minWidth: 300,\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  }\n}));\nexport function Location(props) {\n  _s();\n\n  const classes = useStyles();\n  const [locationData, setLocationData] = useState(defaultData);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogRef, setDialogRef] = useState(null);\n\n  const getData = async () => {\n    setLocationData(await props.getData(props.path)); // console.log(locationData);\n  };\n\n  useEffect(() => {\n    getData(props.path);\n  }, [props, dialogOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: locationData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [locationData.locationlist.map(location => /*#__PURE__*/_jsxDEV(Card, {\n        component: Link,\n        elevation: 3,\n        to: location.path,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            width: 1,\n            height: 1,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: location.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, location.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        onClick: () => {\n          setDialogOpen(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Add New Location Here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, \"newlocation\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddLocationDialog, {\n        ref: dialogRef,\n        onClose: () => {\n          setDialogOpen(false);\n        },\n        open: dialogOpen,\n        currentPath: locationData.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Location, \"aaqPaVN7OvjR9GZfqsqInKmlbzQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/Location.js"],"names":["React","useEffect","useState","makeStyles","Link","locationData_Home","locationData_MKS","Card","CardActionArea","CardActions","CardContent","Typography","AddLocationDialog","defaultData","title","locationlist","itemlist","path","template","useStyles","theme","card","display","padding","spacing","flexWrap","justifyContent","minHeight","minWidth","margin","width","height","Location","props","classes","locationData","setLocationData","dialogOpen","setDialogOpen","dialogRef","setDialogRef","getData","map","location"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom';\r\nimport { locationData_Home, locationData_MKS } from '../testcases';\r\nimport { Card, CardActionArea, CardActions, CardContent, Typography } from '@material-ui/core';\r\nimport { AddLocationDialog } from './AddLocation';\r\n\r\nconst defaultData = {\r\n  title: \"Loading...\",\r\n  locationlist: [],\r\n  itemlist: [],\r\n  path: \"/loading\",\r\n  template: \"Location\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    padding: theme.spacing(2),\r\n    flexWrap: 'wrap',\r\n    justifyContent: \"center\",\r\n    minHeight: 200,\r\n    minWidth: 300,\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  }\r\n}));\r\n\r\nexport function Location(props){\r\n  const classes = useStyles();\r\n  const [locationData, setLocationData ] = useState(defaultData);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogRef, setDialogRef] = useState(null)\r\n\r\n  const getData = async ()=>{\r\n    setLocationData(await props.getData(props.path));\r\n    // console.log(locationData);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getData(props.path);\r\n  }, [props, dialogOpen])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"h3\">{locationData.title}</Typography>\r\n      </div>\r\n      <div className={classes.card}>\r\n        {locationData.locationlist.map((location)=>(\r\n          <Card key={location.path} component={Link} elevation={3} to={location.path}>\r\n            <CardActionArea>\r\n              <CardContent width={1} height={1}>\r\n                <Typography >{location.title}</Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        ))}\r\n        <Card key=\"newlocation\" elevation={3} onClick={()=>{setDialogOpen(true)}}>\r\n          <CardActionArea>\r\n            <CardContent>\r\n              <Typography>Add New Location Here.</Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <AddLocationDialog \r\n          ref={dialogRef} \r\n          onClose={()=>{setDialogOpen(false)}} \r\n          open={dialogOpen} \r\n          currentPath={locationData.path} />\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}