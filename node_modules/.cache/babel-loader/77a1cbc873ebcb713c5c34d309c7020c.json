{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { List, ListItem, ListItemText, Avatar, DialogTitle, Dialog, ListItemAvatar, TextField, InputAdornment, DialogActions, Button } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nexport function LoginDialog(props) {\n  _s();\n\n  const {\n    auth,\n    setAuth,\n    open,\n    onClose\n  } = props;\n  const [login, setLogin] = useState(auth.haslogin);\n  const [name, setName] = useState(auth.name);\n  const [password, setPassword] = useState(auth.password);\n\n  const tryLogin = () => {\n    const user = {\n      name: name,\n      password: password\n    };\n\n    if (name && password) {\n      console.log(\"try login\");\n      console.log(user);\n    }\n  };\n\n  const trySignOut = () => {\n    const user = {\n      name: name,\n      password: password\n    };\n    console.log(\"try sign out\");\n    console.log(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: onClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [login ? /*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-title\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), !login && /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullwidth: true,\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          },\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullwidth: true,\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          type: \"password\",\n          label: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"No account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), login ? /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          trySignOut();\n        },\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => tryLogin(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n} // LoginDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n\n_s(LoginDialog, \"HhXW8Up3AYpLgjkvBdPxGsxkvYk=\");\n\n_c = LoginDialog;\nexport function UserAvatar(props) {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  const {\n    auth,\n    setAuth\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n      onClick: () => {\n        setOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginDialog, {\n      auth: auth,\n      setAuth: setAuth,\n      open: open,\n      onClose: () => {\n        setOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserAvatar, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = UserAvatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginDialog\");\n$RefreshReg$(_c2, \"UserAvatar\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/login.js"],"names":["React","useState","List","ListItem","ListItemText","Avatar","DialogTitle","Dialog","ListItemAvatar","TextField","InputAdornment","DialogActions","Button","AccountCircle","PropTypes","LoginDialog","props","auth","setAuth","open","onClose","login","setLogin","haslogin","name","setName","password","setPassword","tryLogin","user","console","log","trySignOut","e","target","value","UserAvatar","setOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  List, ListItem, ListItemText,\r\n  Avatar, DialogTitle, Dialog, ListItemAvatar, TextField, InputAdornment, DialogActions, Button\r\n} from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function LoginDialog(props) {\r\n  const { auth, setAuth, open, onClose } = props;\r\n  const [login, setLogin] = useState(auth.haslogin);\r\n  const [name, setName] = useState(auth.name);\r\n  const [password, setPassword] = useState(auth.password);\r\n\r\n  const tryLogin = () => {\r\n    const user = {\r\n      name: name,\r\n      password: password,\r\n    }\r\n    if (name && password) {\r\n      console.log(\"try login\")\r\n      console.log(user)\r\n    }\r\n  }\r\n\r\n  const trySignOut = () => {\r\n    const user = {\r\n      name: name,\r\n      password: password,\r\n    }\r\n    console.log(\"try sign out\")\r\n    console.log(user)\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      {login ? (\r\n        <DialogTitle id=\"dialog-title\">\r\n          {name}\r\n        </DialogTitle>\r\n      ) : (\r\n          <DialogTitle id=\"dialog-title\">\r\n            Login\r\n          </DialogTitle>\r\n        )}\r\n      {!login && (\r\n        <List>\r\n          <ListItem>\r\n            <TextField\r\n              required\r\n              fullwidth={true}\r\n              value={name}\r\n              onChange={(e) => { setName(e.target.value) }}\r\n              label=\"Username\"\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <TextField\r\n              required\r\n              fullwidth={true}\r\n              onChange={(e) => { setPassword(e.target.value) }}\r\n              type=\"password\"\r\n              label=\"password\"\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemAvatar>\r\n              <Avatar />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"No account?\" />\r\n          </ListItem>\r\n        </List>\r\n      )\r\n      }\r\n      { login ? (\r\n        <DialogActions>\r\n          <Button onClick={() => { trySignOut() }} >Sign out</Button>\r\n        </DialogActions>\r\n      ) : (\r\n          <DialogActions>\r\n            <Button onClick={() => tryLogin()} >Login</Button>\r\n          </DialogActions>\r\n        )\r\n      }\r\n    </Dialog >\r\n  );\r\n}\r\n\r\n// LoginDialog.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n//   selectedValue: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport function UserAvatar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const { auth, setAuth } = props;\r\n\r\n  return (\r\n    <div>\r\n      <AccountCircle\r\n        onClick={() => { setOpen(true) }}\r\n      />\r\n      <LoginDialog\r\n        auth={auth}\r\n        setAuth={setAuth}\r\n        open={open}\r\n        onClose={() => { setOpen(false) }} />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}