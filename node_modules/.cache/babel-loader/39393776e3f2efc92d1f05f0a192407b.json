{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\MainArea.js\",\n    _s = $RefreshSig$();\n\nimport { locationData, locationData_MKS, locationData_Freezer, pathList } from './testcases';\nimport { Redirect, Route, Switch, useParams } from \"react-router-dom\";\nimport { message } from 'antd';\nimport { ShelfTable1 } from './components/ShelfTable1';\nimport { useEffect, useState } from 'react';\nimport { Overview } from './components';\nimport { Container } from '@material-ui/core';\nimport { Location } from './components/Location';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defaultData, getLocationData } from './Connection';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MainArea() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currentPath\n  } = useParams();\n  const [pageData, setPageData] = useState(defaultData);\n\n  const updatePageData = async path => {\n    console.log(\"Getting Data for path:\", \"/\" + path);\n    setPageData(await getLocationData(\"/\" + path));\n    console.log(pageData.locationlist);\n  };\n\n  useEffect(() => {\n    updatePageData(currentPath);\n  }, [currentPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), pageData.template === \"Location\" ? /*#__PURE__*/_jsxDEV(Location, {\n      path: \"/\" + currentPath,\n      getData: getLocationData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : pageData.template === \"ShelfTable\" ? /*#__PURE__*/_jsxDEV(ShelfTable1, {\n      path: \"/\" + currentPath,\n      getData: getLocationData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unrecognize template.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n} // function Child() {\n//   let { path } = useParam();\n//   useEffect(()=>{\n//     getLocationData(path);\n//   })\n// }\n\n_s(MainArea, \"X3/Z52zQleqSl5dveAdFprVI7tc=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = MainArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainArea\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/MainArea.js"],"names":["locationData","locationData_MKS","locationData_Freezer","pathList","Redirect","Route","Switch","useParams","message","ShelfTable1","useEffect","useState","Overview","Container","Location","makeStyles","defaultData","getLocationData","useStyles","theme","root","display","toolbar","alignItems","justifyContent","padding","spacing","mixins","content","flexGrow","MainArea","classes","currentPath","pageData","setPageData","updatePageData","path","console","log","locationlist","template"],"mappings":";;;;;AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,oBAAzC,EAA+DC,QAA/D,QAA+E,aAA/E;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,kBAAnD;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,cAA7C;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPD,IAAAA,OAAO,EAAE,MADF;AAEPE,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,UAHT;AAIPC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJF;AAKP;AACA,OAAGP,KAAK,CAACQ,MAAN,CAAaL;AANT,GAJ8B;AAYvCM,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,CADH;AAEPJ,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AAFF;AAZ8B,CAAZ,CAAD,CAA5B;AAkBA,eAAe,SAASI,QAAT,GAAoB;AAAA;;AACjC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAkBzB,SAAS,EAAjC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACK,WAAD,CAAxC;;AAEA,QAAMmB,cAAc,GAAG,MAAOC,IAAP,IAAgB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,MAAMF,IAA5C;AACAF,IAAAA,WAAW,CAAC,MAAMjB,eAAe,CAAC,MAAMmB,IAAP,CAAtB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,YAArB;AACD,GAJD;;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,cAAc,CAACH,WAAD,CAAd;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACH,OAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACT;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGW,QAAQ,CAACO,QAAT,KAAsB,UAAtB,gBACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE,MAAMR,WAAtB;AAAmC,MAAA,OAAO,EAAEf;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,GAEGgB,QAAQ,CAACO,QAAT,KAAsB,YAAtB,gBACF,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE,MAAMR,WAAzB;AAAsC,MAAA,OAAO,EAAEf;AAA/C;AAAA;AAAA;AAAA;AAAA,YADE,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,C,CAED;AACA;AAEA;AACA;AACA;AACA;;GAhDwBa,Q;UACNZ,S,EACQX,S;;;KAFFuB,Q","sourcesContent":["import { locationData, locationData_MKS, locationData_Freezer, pathList } from './testcases'\r\nimport { Redirect, Route, Switch, useParams } from \"react-router-dom\"\r\nimport { message } from 'antd'\r\nimport { ShelfTable1 } from './components/ShelfTable1'\r\nimport { useEffect, useState } from 'react'\r\nimport { Overview } from './components'\r\nimport { Container } from '@material-ui/core'\r\nimport { Location } from './components/Location'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { defaultData, getLocationData } from './Connection'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainArea() {\r\n  const classes = useStyles();\r\n  const { currentPath } = useParams();\r\n  const [pageData, setPageData] = useState(defaultData);\r\n\r\n  const updatePageData = async (path) => {\r\n    console.log(\"Getting Data for path:\", \"/\" + path)\r\n    setPageData(await getLocationData(\"/\" + path));\r\n    console.log(pageData.locationlist)\r\n  }\r\n\r\n  useEffect(() => {\r\n    updatePageData(currentPath)\r\n  }, [currentPath])\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      {pageData.template === \"Location\" ? (\r\n        <Location path={\"/\" + currentPath} getData={getLocationData} />\r\n      ) : pageData.template === \"ShelfTable\" ? (\r\n        <ShelfTable1 path={\"/\" + currentPath} getData={getLocationData} />\r\n      ) : (\r\n            <p>Unrecognize template.</p>\r\n          )}\r\n      {/* {pageData.locationlist.map((option)=>(\r\n        option.template === \"ShelfTable\"? (\r\n          <Route exact key={option.path} path={option.path} >\r\n            <ShelfTable1 path={option.path} getData={getLocationData} />\r\n          </Route>\r\n        ): option.template === \"Location\"? (\r\n          <Route exact key={option.path} path={option.path} >\r\n            <Location path={option.path} getData={getLocationData} />\r\n          </Route>\r\n        ): (\r\n          <p>Unrecognize template.</p>\r\n        )\r\n      ))} */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// function Child() {\r\n//   let { path } = useParam();\r\n\r\n//   useEffect(()=>{\r\n//     getLocationData(path);\r\n//   })\r\n// }"]},"metadata":{},"sourceType":"module"}