{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\AddItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, TextField, DialogTitle, List, ListItem, Button, DialogActions } from '@material-ui/core';\nimport { addItemToServer } from '../Connection';\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport function AddItemDialog(props) {\n  _s();\n\n  const {\n    onClose,\n    open,\n    currentPath\n  } = props;\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"ric\");\n  const [discription, setDiscription] = useState(\"\");\n  const classes = useStyles();\n\n  const getTimeString = () => {\n    const a = new Date();\n    console.log(a);\n    return a.toISOString();\n  };\n\n  const handleConfirm = async () => {\n    const item = {\n      name: name,\n      path: currentPath,\n      owner: owner,\n      time: getTimeString(),\n      discription: discription\n    };\n    console.log(item);\n    console.log(await addItemToServer(item));\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: () => {\n      onClose();\n    },\n    open: open,\n    className: classes.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"addlocation\",\n      children: \"Add Item Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"name\",\n          label: \"Name\",\n          onChange: event => {\n            setName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"discription\",\n          label: \"Discription\",\n          multiline: true,\n          onChange: event => {\n            setDiscription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          handleConfirm();\n        },\n        color: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddItemDialog, \"Dx0IucA34txSJ1xPkD7uWdEELUQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddItemDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemDialog\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/AddItem.js"],"names":["React","useState","makeStyles","Dialog","TextField","DialogTitle","List","ListItem","Button","DialogActions","addItemToServer","useStyles","theme","dialog","flexWrap","margin","spacing","withoutLabel","marginTop","AddItemDialog","props","onClose","open","currentPath","name","setName","owner","setOwner","discription","setDiscription","classes","getTimeString","a","Date","console","log","toISOString","handleConfirm","item","path","time","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { \r\n  Dialog, TextField, DialogTitle,\r\n  List, ListItem, Button, DialogActions\r\n} from '@material-ui/core';\r\nimport { addItemToServer } from '../Connection'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nexport function AddItemDialog(props){\r\n  const { onClose, open, currentPath } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"ric\");\r\n  const [discription, setDiscription] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const getTimeString = ()=>{\r\n    const a = new Date();\r\n    console.log(a);\r\n    return a.toISOString()\r\n  }\r\n\r\n  const handleConfirm = async ()=>{\r\n    const item = {\r\n      name: name, \r\n      path: currentPath,\r\n      owner: owner,\r\n      time: getTimeString(),\r\n      discription: discription\r\n    };\r\n    console.log(item);\r\n    console.log(await addItemToServer(item));\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={()=>{onClose()}} open={open} className={classes.dialog}>\r\n      <DialogTitle id=\"addlocation\">Add Item Here!</DialogTitle>\r\n      <List>\r\n        <ListItem>\r\n          <TextField fullWidth id=\"name\" label=\"Name\" onChange={(event)=>{setName(event.target.value)}} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <TextField \r\n            fullWidth \r\n            id=\"discription\" \r\n            label=\"Discription\" \r\n            multiline \r\n            onChange={(event)=>{setDiscription(event.target.value)}} />\r\n        </ListItem>\r\n      </List>\r\n      <DialogActions>\r\n        <Button \r\n          onClick={()=>{handleConfirm()}} \r\n          color=\"primary\"\r\n          >Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}