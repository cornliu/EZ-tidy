{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\Empty.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardActions, CardContent, Typography, Avatar, CardMedia, Divider, Box } from '@material-ui/core';\nimport { AddBox, AddLocation } from '@material-ui/icons';\nimport { AddLocationDialog } from './AddLocation';\nimport { AddItemDialog } from './AddItem';\nimport { defaultData } from '../Connection';\nimport { AuthContext } from '../contexts';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    padding: theme.spacing(6),\n    paddingBottom: theme.spacing(1)\n  },\n  root: {\n    padding: theme.spacing(4),\n    paddingTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: 'wrap',\n    justifyContent: \"left\",\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  },\n  card: {\n    display: 'flex',\n    padding: theme.spacing(2),\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n    minHeight: 200,\n    minWidth: 300,\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  },\n  addcard: {\n    display: \"flex\",\n    width: 275,\n    minHeight: 275,\n    height: 'auto',\n    justifyContent: 'center'\n  },\n  addcardarea: {\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: 'center'\n  },\n  addcardmedia: {\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: 'center'\n  }\n}));\nexport function Empty(props) {\n  _s();\n\n  const classes = useStyles();\n  let locationData = props.pageData;\n  const [addItemDialogOpen, setAddItemDialogOpen] = useState(false);\n  const [addLocationDialogOpen, setAddLocationDialogOpen] = useState(false);\n  const [dialogRef, setDialogRef] = useState(null);\n  const auth = useContext(AuthContext); // const getData = async ()=>{\n  //   console.log(\"Query from Empty\");\n  //   props.setData(await props.getData(props.path));\n  // }\n\n  useEffect(() => {\n    props.getData();\n  }, [props.path, addItemDialogOpen, addLocationDialogOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        align: \"left\",\n        children: locationData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        paragraph: true,\n        align: \"left\",\n        gutterBottom: true,\n        children: locationData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        onClick: () => {\n          setAddItemDialogOpen(true);\n        },\n        className: classes.addcard,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          className: classes.addcardarea,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.addcardmedia,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              sizes: \"Large\",\n              children: /*#__PURE__*/_jsxDEV(AddBox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Add New Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, \"newlocation\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), auth.identity === \"Admin\" && /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        onClick: () => {\n          setAddLocationDialogOpen(true);\n        },\n        className: classes.addcard,\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          className: classes.addcardarea,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.addcardmedia,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              sizes: \"Large\",\n              children: /*#__PURE__*/_jsxDEV(AddLocation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Add New Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, \"newlocation\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddLocationDialog, {\n        ref: dialogRef,\n        onClose: () => {\n          setAddLocationDialogOpen(false);\n        },\n        open: addLocationDialogOpen,\n        currentPath: locationData.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddItemDialog, {\n        onClose: () => {\n          setAddItemDialogOpen(false);\n        },\n        open: addItemDialogOpen,\n        currentPath: locationData.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Empty, \"cSDc0uHe9fuDne9tVnDJO3ODAh4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Empty;\n\nvar _c;\n\n$RefreshReg$(_c, \"Empty\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/Empty.js"],"names":["React","useContext","useEffect","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","Typography","Avatar","CardMedia","Divider","Box","AddBox","AddLocation","AddLocationDialog","AddItemDialog","defaultData","AuthContext","useStyles","theme","title","padding","spacing","paddingBottom","root","paddingTop","display","flexDirection","flexWrap","justifyContent","margin","width","height","card","minHeight","minWidth","addcard","addcardarea","addcardmedia","Empty","props","classes","locationData","pageData","addItemDialogOpen","setAddItemDialogOpen","addLocationDialogOpen","setAddLocationDialogOpen","dialogRef","setDialogRef","auth","getData","path","description","identity"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Card, CardActionArea, CardActions, CardContent, Typography,\r\n  Avatar, CardMedia, Divider, Box\r\n} from '@material-ui/core';\r\nimport { AddBox, AddLocation } from '@material-ui/icons'\r\nimport { AddLocationDialog } from './AddLocation';\r\nimport { AddItemDialog } from './AddItem'\r\nimport { defaultData } from '../Connection';\r\nimport { AuthContext } from '../contexts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    padding: theme.spacing(6),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    paddingTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: 'wrap',\r\n    justifyContent: \"left\",\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    padding: theme.spacing(2),\r\n    flexWrap: 'wrap',\r\n    justifyContent: \"center\",\r\n    minHeight: 200,\r\n    minWidth: 300,\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  addcard: {\r\n    display: \"flex\",\r\n    width: 275,\r\n    minHeight: 275,\r\n    height: 'auto',\r\n    justifyContent: 'center'\r\n  },\r\n  addcardarea: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    justifyContent: 'center',\r\n  },\r\n  addcardmedia: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport function Empty(props) {\r\n  const classes = useStyles();\r\n  let locationData = props.pageData;\r\n  const [addItemDialogOpen, setAddItemDialogOpen] = useState(false);\r\n  const [addLocationDialogOpen, setAddLocationDialogOpen] = useState(false);\r\n  const [dialogRef, setDialogRef] = useState(null)\r\n  const auth = useContext(AuthContext);\r\n  // const getData = async ()=>{\r\n  //   console.log(\"Query from Empty\");\r\n  //   props.setData(await props.getData(props.path));\r\n  // }\r\n\r\n  useEffect(() => {\r\n    props.getData();\r\n  }, [props.path, addItemDialogOpen, addLocationDialogOpen])\r\n\r\n  return (\r\n    <div>\r\n      <Box className={classes.title}>\r\n        <Typography variant=\"h3\" align='left'>{locationData.title}</Typography>\r\n        <Typography paragraph align='left' gutterBottom >{locationData.description}</Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box className={classes.root}>\r\n        <Card key=\"newlocation\" elevation={3}\r\n          onClick={() => { setAddItemDialogOpen(true) }}\r\n          className={classes.addcard}\r\n        >\r\n          <CardActionArea className={classes.addcardarea}>\r\n            <CardMedia className={classes.addcardmedia}>\r\n              <Avatar sizes=\"Large\">\r\n                <AddBox />\r\n              </Avatar>\r\n            </CardMedia>\r\n            <CardContent>\r\n              <Typography>\r\n                Add New Item\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        {auth.identity === \"Admin\" && (\r\n          <Card key=\"newlocation\" elevation={3}\r\n            onClick={() => { setAddLocationDialogOpen(true) }}\r\n            className={classes.addcard}\r\n          >\r\n            <CardActionArea className={classes.addcardarea}>\r\n              <CardMedia className={classes.addcardmedia}>\r\n                <Avatar sizes=\"Large\">\r\n                  <AddLocation />\r\n                </Avatar>\r\n              </CardMedia>\r\n              <CardContent>\r\n                <Typography>\r\n                  Add New Location\r\n              </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        )}\r\n        <AddLocationDialog\r\n          ref={dialogRef}\r\n          onClose={() => { setAddLocationDialogOpen(false) }}\r\n          open={addLocationDialogOpen}\r\n          currentPath={locationData.path} />\r\n        <AddItemDialog\r\n          onClose={() => { setAddItemDialogOpen(false) }}\r\n          open={addItemDialogOpen}\r\n          currentPath={locationData.path} />\r\n      </Box>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}