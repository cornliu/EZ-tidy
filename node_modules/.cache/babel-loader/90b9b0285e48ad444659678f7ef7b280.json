{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Avatar, DialogTitle, Dialog, ListItemAvatar, TextField, DialogActions, Button, Box, Card, CardHeader, CardActionArea, CardMedia, CardContent, Typography, makeStyles, CardActions } from '@material-ui/core';\nimport { AccountCircle, Lock } from '@material-ui/icons';\nimport { loginToServer, addUserToServer } from '../Connection';\nimport { AuthContext } from '../contexts';\nimport { useSnackbar } from 'notistack';\nexport function LoginDialog(props) {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [login, setLogin] = useState(auth.haslogin);\n  const [name, setName] = useState(auth.name);\n  const [password, setPassword] = useState(auth.password);\n\n  const tryLogin = async () => {\n    const user = {\n      name: name,\n      password: password\n    };\n\n    if (name && password) {\n      const msg = await loginToServer(user);\n      console.log(\"try login:\", msg);\n\n      if (msg === true) {\n        props.setAuth({\n          haslogin: true,\n          name: name,\n          password: password,\n          identity: name === \"Admin\" ? \"Admin\" : \"User\"\n        });\n        props.onClose();\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLogin(auth.haslogin);\n    setName(auth.name);\n    setPassword(auth.password);\n  }, [auth]);\n\n  const trySignOut = () => {\n    console.log(\"try sign out\");\n    props.setAuth({\n      haslogin: false,\n      name: name,\n      password: \"\",\n      identity: \"User\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: props.onClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: props.open,\n    children: [!login && /*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"dialog-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), login && /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), !login && /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullwidth: true,\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          },\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullwidth: true,\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          type: \"password\",\n          label: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"No account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), login ? /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          trySignOut();\n        },\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => tryLogin(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginDialog, \"q8Z7lbjk0fH2KMi5LDer3m4iMw0=\");\n\n_c = LoginDialog;\nexport function UserAvatar(props) {\n  _s2();\n\n  const [open, setOpen] = useState(false);\n  const {\n    auth,\n    setAuth\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountCircle, {\n      onClick: () => {\n        setOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginDialog, {\n      auth: auth,\n      setAuth: setAuth,\n      open: open,\n      onClose: () => {\n        setOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserAvatar, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = UserAvatar;\nconst useStyle = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    minHeight: \"100%\",\n    height: \"100%\",\n    width: \"100%\",\n    display: 'flex',\n    justifyContent: \"center\",\n    alignItems: 'center',\n    flexShrink: 0,\n    flexGrow: 1\n  },\n  card: {\n    maxWidth: 345,\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    padding: theme.spacing(8)\n  },\n  cardcontent: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  textfield: {\n    margin: theme.spacing(1)\n  },\n  cardactions: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: \"flex_end\"\n  }\n}));\nexport function Login(props) {\n  _s3();\n\n  const {\n    setAuth\n  } = props;\n  const classes = useStyle();\n  const auth = useContext(AuthContext);\n  const [login, setLogin] = useState(auth.haslogin);\n  const [name, setName] = useState(auth.name);\n  const [password, setPassword] = useState(auth.password);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const tryLogin = async () => {\n    const user = {\n      name: name,\n      password: password\n    };\n\n    if (name && password) {\n      const {\n        status,\n        data\n      } = await loginToServer(user);\n\n      if (status === \"success\") {\n        props.setAuth({\n          haslogin: true,\n          name: name,\n          password: password,\n          identity: name === \"Admin\" ? \"Admin\" : \"User\"\n        });\n      }\n\n      enqueueSnackbar(data, {\n        variant: status\n      });\n    }\n  };\n\n  const createUser = async () => {\n    const user = {\n      name: name,\n      password: password,\n      identity: \"User\"\n    };\n\n    if (name && password) {\n      const {\n        status,\n        data\n      } = await addUserToServer(user);\n      enqueueSnackbar(data, {\n        variant: status\n      });\n\n      if (status === \"success\") {\n        setName(\"\");\n        setPassword(\"\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    setName(auth.name);\n    setPassword(auth.password);\n  }, [auth]);\n\n  const trySignOut = () => {\n    console.log(\"try sign out\");\n    props.setAuth({\n      haslogin: false,\n      name: name,\n      password: \"\",\n      identity: \"User\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        children: /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardcontent,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          children: \"\\u767B\\u5165\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"username\",\n          variant: \"outlined\",\n          value: name,\n          className: classes.textfield,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          variant: \"outlined\",\n          value: password,\n          className: classes.textfield,\n          type: \"password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: () => createUser(),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => tryLogin(),\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Login, \"TFYsIf2X48WZpEnuIqnLG9AO88g=\", false, function () {\n  return [useStyle, useSnackbar];\n});\n\n_c3 = Login;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginDialog\");\n$RefreshReg$(_c2, \"UserAvatar\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/Login.js"],"names":["React","useContext","useEffect","useState","List","ListItem","ListItemText","Avatar","DialogTitle","Dialog","ListItemAvatar","TextField","DialogActions","Button","Box","Card","CardHeader","CardActionArea","CardMedia","CardContent","Typography","makeStyles","CardActions","AccountCircle","Lock","loginToServer","addUserToServer","AuthContext","useSnackbar","LoginDialog","props","auth","login","setLogin","haslogin","name","setName","password","setPassword","tryLogin","user","msg","console","log","setAuth","identity","onClose","trySignOut","open","e","target","value","UserAvatar","setOpen","useStyle","theme","root","position","minHeight","height","width","display","justifyContent","alignItems","flexShrink","flexGrow","card","maxWidth","flexDirection","alignSelf","padding","spacing","cardcontent","textfield","margin","cardactions","Login","classes","enqueueSnackbar","status","data","variant","createUser"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACEC,IADF,EACQC,QADR,EACkBC,YADlB,EACgCC,MADhC,EACwCC,WADxC,EAEEC,MAFF,EAEUC,cAFV,EAE0BC,SAF1B,EAEqCC,aAFrC,EAEoDC,MAFpD,EAGEC,GAHF,EAGOC,IAHP,EAGaC,UAHb,EAGyBC,cAHzB,EAGyCC,SAHzC,EAGoDC,WAHpD,EAGiEC,UAHjE,EAG6EC,UAH7E,EAGyFC,WAHzF,QAIO,mBAJP;AAKA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,oBAApC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,eAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACjC,QAAMC,IAAI,GAAG9B,UAAU,CAAC0B,WAAD,CAAvB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC4B,IAAI,CAACG,QAAN,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC4B,IAAI,CAACI,IAAN,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC4B,IAAI,CAACM,QAAN,CAAxC;;AAEA,QAAME,QAAQ,GAAG,YAAY;AAC3B,UAAMC,IAAI,GAAG;AACXL,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,QAAQ,EAAEA;AAFC,KAAb;;AAIA,QAAIF,IAAI,IAAIE,QAAZ,EAAsB;AACpB,YAAMI,GAAG,GAAI,MAAMhB,aAAa,CAACe,IAAD,CAAhC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;;AACA,UAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChBX,QAAAA,KAAK,CAACc,OAAN,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,IAAI,EAAEA,IAFM;AAGZE,UAAAA,QAAQ,EAAEA,QAHE;AAIZQ,UAAAA,QAAQ,EAAEV,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B;AAJ3B,SAAd;AAMAL,QAAAA,KAAK,CAACgB,OAAN;AACD;AACF;AACF,GAlBD;;AAoBA5C,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,QAAQ,CAACF,IAAI,CAACG,QAAN,CAAR;AACAE,IAAAA,OAAO,CAACL,IAAI,CAACI,IAAN,CAAP;AACAG,IAAAA,WAAW,CAACP,IAAI,CAACM,QAAN,CAAX;AACD,GAJQ,EAIN,CAACN,IAAD,CAJM,CAAT;;AAMA,QAAMgB,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAb,IAAAA,KAAK,CAACc,OAAN,CAAc;AACZV,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,IAAI,EAAEA,IAFM;AAGZE,MAAAA,QAAQ,EAAE,EAHE;AAIZQ,MAAAA,QAAQ,EAAE;AAJE,KAAd;AAMD,GARD;;AAUA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEf,KAAK,CAACgB,OAAvB;AAAgC,uBAAgB,qBAAhD;AAAsE,IAAA,IAAI,EAAEhB,KAAK,CAACkB,IAAlF;AAAA,eACG,CAAChB,KAAD,iBACC,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMGA,KAAK,iBACJ,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPJ,EAgBG,CAACH,KAAD,iBACC,QAAC,IAAD;AAAA,8BACE,QAAC,QAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,SAAS,EAAE,IAFb;AAGE,UAAA,KAAK,EAAEG,IAHT;AAIE,UAAA,QAAQ,EAAGc,CAAD,IAAO;AAAEb,YAAAA,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyB,WAJ9C;AAKE,UAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,QAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,SAAS,EAAE,IAFb;AAGE,UAAA,QAAQ,EAAGF,CAAD,IAAO;AAAEX,YAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA6B,WAHlD;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,QAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,EA6CInB,KAAK,gBACL,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEe,UAAAA,UAAU;AAAI,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,gBAKH,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMR,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlDN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GApGeV,W;;KAAAA,W;AAsGhB,OAAO,SAASuB,UAAT,CAAoBtB,KAApB,EAA2B;AAAA;;AAChC,QAAM,CAACkB,IAAD,EAAOK,OAAP,IAAkBlD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAE4B,IAAAA,IAAF;AAAQa,IAAAA;AAAR,MAAoBd,KAA1B;AAEA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,OAAO,EAAE,MAAM;AAAEuB,QAAAA,OAAO,CAAC,IAAD,CAAP;AAAe;AADlC;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEtB,IADR;AAEE,MAAA,OAAO,EAAEa,OAFX;AAGE,MAAA,IAAI,EAAEI,IAHR;AAIE,MAAA,OAAO,EAAE,MAAM;AAAEK,QAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB;AAJnC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;IAhBeD,U;;MAAAA,U;AAkBhB,MAAME,QAAQ,GAAGjC,UAAU,CAAEkC,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,SAAS,EAAE,MAFP;AAGJC,IAAAA,MAAM,EAAE,MAHJ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,cAAc,EAAE,QANZ;AAOJC,IAAAA,UAAU,EAAE,QAPR;AAQJC,IAAAA,UAAU,EAAE,CARR;AASJC,IAAAA,QAAQ,EAAE;AATN,GADgC;AAYtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJN,IAAAA,OAAO,EAAE,MAFL;AAGJO,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,OAAO,EAAEf,KAAK,CAACgB,OAAN,CAAc,CAAd;AALL,GAZgC;AAmBtCC,EAAAA,WAAW,EAAE;AACXX,IAAAA,OAAO,EAAE,MADE;AAEXO,IAAAA,aAAa,EAAE;AAFJ,GAnByB;AAuBtCK,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAEnB,KAAK,CAACgB,OAAN,CAAc,CAAd;AADC,GAvB2B;AA0BtCI,EAAAA,WAAW,EAAE;AACXd,IAAAA,OAAO,EAAE,MADE;AAEXO,IAAAA,aAAa,EAAE,KAFJ;AAGXN,IAAAA,cAAc,EAAE;AAHL;AA1ByB,CAAZ,CAAD,CAA3B;AAiCA,OAAO,SAASc,KAAT,CAAe9C,KAAf,EAAsB;AAAA;;AAC3B,QAAM;AAAEc,IAAAA;AAAF,MAAcd,KAApB;AACA,QAAM+C,OAAO,GAAGvB,QAAQ,EAAxB;AACA,QAAMvB,IAAI,GAAG9B,UAAU,CAAC0B,WAAD,CAAvB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC4B,IAAI,CAACG,QAAN,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC4B,IAAI,CAACI,IAAN,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC4B,IAAI,CAACM,QAAN,CAAxC;AACA,QAAM;AAAEyC,IAAAA;AAAF,MAAsBlD,WAAW,EAAvC;;AAEA,QAAMW,QAAQ,GAAG,YAAY;AAC3B,UAAMC,IAAI,GAAG;AACXL,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,QAAQ,EAAEA;AAFC,KAAb;;AAIA,QAAIF,IAAI,IAAIE,QAAZ,EAAsB;AACpB,YAAM;AAAE0C,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmB,MAAMvD,aAAa,CAACe,IAAD,CAA5C;;AACA,UAAIuC,MAAM,KAAK,SAAf,EAA0B;AACxBjD,QAAAA,KAAK,CAACc,OAAN,CAAc;AACZV,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,IAAI,EAAEA,IAFM;AAGZE,UAAAA,QAAQ,EAAEA,QAHE;AAIZQ,UAAAA,QAAQ,EAAEV,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B;AAJ3B,SAAd;AAMD;;AACD2C,MAAAA,eAAe,CAACE,IAAD,EAAO;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAP,CAAf;AACD;AACF,GAjBD;;AAmBA,QAAMG,UAAU,GAAG,YAAY;AAC7B,UAAM1C,IAAI,GAAG;AACXL,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,QAAQ,EAAEA,QAFC;AAGXQ,MAAAA,QAAQ,EAAE;AAHC,KAAb;;AAKA,QAAIV,IAAI,IAAIE,QAAZ,EAAsB;AACpB,YAAM;AAAE0C,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmB,MAAMtD,eAAe,CAACc,IAAD,CAA9C;AACAsC,MAAAA,eAAe,CAACE,IAAD,EAAO;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAP,CAAf;;AACA,UAAIA,MAAM,KAAK,SAAf,EAA0B;AACxB3C,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF;AACF,GAdD;;AAgBApC,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,OAAO,CAACL,IAAI,CAACI,IAAN,CAAP;AACAG,IAAAA,WAAW,CAACP,IAAI,CAACM,QAAN,CAAX;AACD,GAHQ,EAGN,CAACN,IAAD,CAHM,CAAT;;AAKA,QAAMgB,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAb,IAAAA,KAAK,CAACc,OAAN,CAAc;AACZV,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,IAAI,EAAEA,IAFM;AAGZE,MAAAA,QAAQ,EAAE,EAHE;AAIZQ,MAAAA,QAAQ,EAAE;AAJE,KAAd;AAMD,GARD;;AAUA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEgC,OAAO,CAACrB,IAAxB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEqB,OAAO,CAACX,IAAzB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEW,OAAO,CAACL,WAAhC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,OAAO,EAAC,UAApC;AACE,UAAA,KAAK,EAAErC,IADT;AAEE,UAAA,SAAS,EAAE0C,OAAO,CAACJ,SAFrB;AAGE,UAAA,QAAQ,EAAGxB,CAAD,IAAO;AAAEb,YAAAA,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyB;AAH9C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,OAAO,EAAC,UAApC;AACE,UAAA,KAAK,EAAEd,QADT;AAEE,UAAA,SAAS,EAAEwC,OAAO,CAACJ,SAFrB;AAEgC,UAAA,IAAI,EAAC,UAFrC;AAGE,UAAA,QAAQ,EAAGxB,CAAD,IAAO;AAAEX,YAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA6B;AAHlD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAiBE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAC,SAA7B;AACE,UAAA,OAAO,EAAE,MAAM+B,UAAU,EAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AACE,UAAA,OAAO,EAAE,MAAM3C,QAAQ,EADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;IA3FeqC,K;UAEEtB,Q,EAKY1B,W;;;MAPdgD,K","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  List, ListItem, ListItemText, Avatar, DialogTitle,\r\n  Dialog, ListItemAvatar, TextField, DialogActions, Button,\r\n  Box, Card, CardHeader, CardActionArea, CardMedia, CardContent, Typography, makeStyles, CardActions\r\n} from '@material-ui/core';\r\nimport { AccountCircle, Lock } from '@material-ui/icons'\r\nimport { loginToServer, addUserToServer } from '../Connection';\r\nimport { AuthContext } from '../contexts'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nexport function LoginDialog(props) {\r\n  const auth = useContext(AuthContext)\r\n  const [login, setLogin] = useState(auth.haslogin);\r\n  const [name, setName] = useState(auth.name);\r\n  const [password, setPassword] = useState(auth.password);\r\n\r\n  const tryLogin = async () => {\r\n    const user = {\r\n      name: name,\r\n      password: password,\r\n    }\r\n    if (name && password) {\r\n      const msg = (await loginToServer(user));\r\n      console.log(\"try login:\", msg)\r\n      if (msg === true) {\r\n        props.setAuth({\r\n          haslogin: true,\r\n          name: name,\r\n          password: password,\r\n          identity: name === \"Admin\" ? \"Admin\" : \"User\"\r\n        })\r\n        props.onClose();\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLogin(auth.haslogin);\r\n    setName(auth.name);\r\n    setPassword(auth.password);\r\n  }, [auth])\r\n\r\n  const trySignOut = () => {\r\n    console.log(\"try sign out\")\r\n    props.setAuth({\r\n      haslogin: false,\r\n      name: name,\r\n      password: \"\",\r\n      identity: \"User\"\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={props.onClose} aria-labelledby=\"simple-dialog-title\" open={props.open}>\r\n      {!login && (\r\n        <DialogTitle id=\"dialog-title\">\r\n          Login\r\n        </DialogTitle>\r\n      )}\r\n      {login && (\r\n        <List>\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar />\r\n            </ListItemAvatar>\r\n            <ListItemText primary={name} />\r\n          </ListItem>\r\n        </List>\r\n      )}\r\n      {!login && (\r\n        <List>\r\n          <ListItem>\r\n            <TextField\r\n              required\r\n              fullwidth={true}\r\n              value={name}\r\n              onChange={(e) => { setName(e.target.value) }}\r\n              label=\"Username\"\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <TextField\r\n              required\r\n              fullwidth={true}\r\n              onChange={(e) => { setPassword(e.target.value) }}\r\n              type=\"password\"\r\n              label=\"password\"\r\n            />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemAvatar>\r\n              <Avatar />\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"No account?\" />\r\n          </ListItem>\r\n        </List>\r\n      )\r\n      }\r\n      { login ? (\r\n        <DialogActions>\r\n          <Button onClick={() => { trySignOut() }} >Sign out</Button>\r\n        </DialogActions>\r\n      ) : (\r\n          <DialogActions>\r\n            <Button onClick={() => tryLogin()} >Login</Button>\r\n          </DialogActions>\r\n        )\r\n      }\r\n    </Dialog >\r\n  );\r\n}\r\n\r\nexport function UserAvatar(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const { auth, setAuth } = props;\r\n\r\n  return (\r\n    <div>\r\n      <AccountCircle\r\n        onClick={() => { setOpen(true) }}\r\n      />\r\n      <LoginDialog\r\n        auth={auth}\r\n        setAuth={setAuth}\r\n        open={open}\r\n        onClose={() => { setOpen(false) }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    minHeight: \"100%\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: 'flex',\r\n    justifyContent: \"center\",\r\n    alignItems: 'center',\r\n    flexShrink: 0,\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignSelf: 'center',\r\n    padding: theme.spacing(8),\r\n  },\r\n  cardcontent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  textfield: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  cardactions: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: \"flex_end\",\r\n  },\r\n}))\r\n\r\nexport function Login(props) {\r\n  const { setAuth } = props;\r\n  const classes = useStyle();\r\n  const auth = useContext(AuthContext);\r\n  const [login, setLogin] = useState(auth.haslogin);\r\n  const [name, setName] = useState(auth.name);\r\n  const [password, setPassword] = useState(auth.password);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const tryLogin = async () => {\r\n    const user = {\r\n      name: name,\r\n      password: password,\r\n    }\r\n    if (name && password) {\r\n      const { status, data } = await loginToServer(user);\r\n      if (status === \"success\") {\r\n        props.setAuth({\r\n          haslogin: true,\r\n          name: name,\r\n          password: password,\r\n          identity: name === \"Admin\" ? \"Admin\" : \"User\"\r\n        })\r\n      }\r\n      enqueueSnackbar(data, { variant: status });\r\n    }\r\n  }\r\n\r\n  const createUser = async () => {\r\n    const user = {\r\n      name: name,\r\n      password: password,\r\n      identity: \"User\"\r\n    }\r\n    if (name && password) {\r\n      const { status, data } = await addUserToServer(user);\r\n      enqueueSnackbar(data, { variant: status });\r\n      if (status === \"success\") {\r\n        setName(\"\");\r\n        setPassword(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(auth.name);\r\n    setPassword(auth.password);\r\n  }, [auth])\r\n\r\n  const trySignOut = () => {\r\n    console.log(\"try sign out\")\r\n    props.setAuth({\r\n      haslogin: false,\r\n      name: name,\r\n      password: \"\",\r\n      identity: \"User\"\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardMedia>\r\n          <Lock />\r\n        </CardMedia>\r\n        <CardContent className={classes.cardcontent}>\r\n          <Typography gutterBottom>\r\n            登入\r\n          </Typography>\r\n          <TextField label=\"username\" variant='outlined'\r\n            value={name}\r\n            className={classes.textfield}\r\n            onChange={(e) => { setName(e.target.value) }} />\r\n          <TextField label=\"password\" variant='outlined'\r\n            value={password}\r\n            className={classes.textfield} type='password'\r\n            onChange={(e) => { setPassword(e.target.value) }} />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button variant=\"text\" color=\"primary\"\r\n            onClick={() => createUser()} >\r\n            Register\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\"\r\n            onClick={() => tryLogin()} >\r\n            Log in\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}