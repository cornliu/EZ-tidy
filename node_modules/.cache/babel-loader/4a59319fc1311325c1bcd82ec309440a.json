{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\components\\\\AddLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, TextField, DialogTitle, List, ListItem, InputAdornment, Button, DialogActions } from '@material-ui/core';\nimport { addLocationToServer } from '../Connection';\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport function AddLocationDialog(props) {\n  _s();\n\n  const {\n    onClose,\n    open\n  } = props;\n  const currentPath = props.currentPath === \"/\" ? \"\" : props.currentPath;\n  const [title, setTitle] = useState(\"\");\n  const [subpath, setSubPath] = useState(\"\");\n  const [discription, setDiscription] = useState(\"\");\n  const classes = useStyles();\n\n  const getTimeString = () => {\n    const a = new Date();\n    console.log(a);\n    return a.toISOString();\n  };\n\n  const handleConfirm = async () => {\n    const location = {\n      title: title,\n      path: currentPath + \"/\" + subpath,\n      discription: discription,\n      template: \"\",\n      time: getTimeString(),\n      parentpath: currentPath === \"\" ? \"/\" : currentPath\n    };\n    console.log(location);\n    console.log(await addLocationToServer(location));\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: () => {\n      onClose();\n    },\n    open: open,\n    className: classes.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"addlocation\",\n      children: \"Add Location Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"title\",\n          label: \"Title\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"path\",\n          label: \"Path\",\n          onChange: event => {\n            setSubPath(event.target.value);\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: currentPath + \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 31\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"discription\",\n          label: \"Discription\",\n          multiline: true,\n          onChange: event => {\n            setDiscription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          handleConfirm();\n        },\n        color: \"primary\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddLocationDialog, \"ykbfwjmmmeNJetb9cUmLVJc0bGI=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddLocationDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationDialog\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/components/AddLocation.js"],"names":["React","useState","makeStyles","Dialog","TextField","DialogTitle","List","ListItem","InputAdornment","Button","DialogActions","addLocationToServer","useStyles","theme","dialog","flexWrap","margin","spacing","withoutLabel","marginTop","AddLocationDialog","props","onClose","open","currentPath","title","setTitle","subpath","setSubPath","discription","setDiscription","classes","getTimeString","a","Date","console","log","toISOString","handleConfirm","location","path","template","time","parentpath","event","target","value","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { \r\n  Dialog, TextField, DialogTitle,\r\n  List, ListItem, InputAdornment, Button, DialogActions\r\n} from '@material-ui/core';\r\nimport { addLocationToServer } from '../Connection'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nexport function AddLocationDialog(props){\r\n  const { onClose, open } = props;\r\n  const currentPath = (props.currentPath === \"/\")? (\"\") : (props.currentPath);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subpath, setSubPath] = useState(\"\");\r\n  const [discription, setDiscription] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const getTimeString = ()=>{\r\n    const a = new Date();\r\n    console.log(a);\r\n    return a.toISOString()\r\n  }\r\n\r\n  const handleConfirm = async ()=>{\r\n    const location = {\r\n      title: title, \r\n      path: currentPath + \"/\" + subpath,\r\n      discription: discription,\r\n      template: \"\",\r\n      time: getTimeString(),\r\n      parentpath: currentPath===\"\"? \"/\":currentPath\r\n    };\r\n    console.log(location);\r\n    console.log(await addLocationToServer(location));\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={()=>{onClose()}} open={open} className={classes.dialog}>\r\n      <DialogTitle id=\"addlocation\">Add Location Here!</DialogTitle>\r\n      <List>\r\n        <ListItem>\r\n          <TextField fullWidth id=\"title\" label=\"Title\" onChange={(event)=>{setTitle(event.target.value)}} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <TextField \r\n            id=\"path\" \r\n            label=\"Path\" \r\n            onChange={(event)=>{setSubPath(event.target.value)}} \r\n            InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">{currentPath + \"/\"}</InputAdornment>\r\n            }} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <TextField \r\n            fullWidth \r\n            id=\"discription\" \r\n            label=\"Discription\" \r\n            multiline \r\n            onChange={(event)=>{setDiscription(event.target.value)}} />\r\n        </ListItem>\r\n      </List>\r\n      <DialogActions>\r\n        <Button \r\n          onClick={()=>{handleConfirm()}} \r\n          color=\"primary\"\r\n          >Confirm</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}