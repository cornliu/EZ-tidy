{"ast":null,"code":"import axios from 'axios';\nconst API_ROOT = 'http://localhost:4000';\nconst instance = axios.create({\n  baseURL: API_ROOT\n});\nexport const defaultData = {\n  title: \"Loading...\",\n  locationlist: [],\n  itemlist: [],\n  commonlist: [],\n  path: \"/loading\",\n  template: \"\"\n};\nexport const getLocationData = async path => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/query\", {\n      path: path\n    });\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const addItemToServer = async item => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/add/item\", item);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const addLocationToServer = async location => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/add/location\", location);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const loginToServer = async user => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/check\", user);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n\n    if (data === false) {\n      data = \" Failed: Wrong Password. \";\n    }\n  } finally {\n    if (data === true) {\n      data = \"Login Successfully.\";\n    }\n\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const addUserToServer = async user => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/add/user\", user);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const deleteItems = async req => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/remove/item\", req);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const deleteLocation = async req => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/remove/location\", req);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};\nexport const returnItemToServer = async req => {\n  let data = null;\n  let status = \"success\";\n\n  try {\n    const res = await instance.post(\"/add/returnitem\", req);\n    data = res.data;\n  } catch (err) {\n    status = \"error\";\n    data = err.response.data;\n  } finally {\n    return {\n      status: status,\n      data: data\n    };\n  }\n};","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/Connection.js"],"names":["axios","API_ROOT","instance","create","baseURL","defaultData","title","locationlist","itemlist","commonlist","path","template","getLocationData","data","status","res","post","err","response","addItemToServer","item","addLocationToServer","location","loginToServer","user","addUserToServer","deleteItems","req","deleteLocation","returnItemToServer"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst API_ROOT = 'http://localhost:4000'\r\nconst instance = axios.create({\r\n  baseURL: API_ROOT\r\n})\r\n\r\nexport const defaultData = {\r\n  title: \"Loading...\",\r\n  locationlist: [],\r\n  itemlist: [],\r\n  commonlist: [],\r\n  path: \"/loading\",\r\n  template: \"\"\r\n}\r\n\r\nexport const getLocationData = async (path) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/query\", { path: path });\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const addItemToServer = async (item) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/add/item\", item);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const addLocationToServer = async (location) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/add/location\", location);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginToServer = async (user) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/check\", user);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n    if (data === false) {\r\n      data = \" Failed: Wrong Password. \";\r\n    }\r\n  } finally {\r\n    if (data === true) {\r\n      data = \"Login Successfully.\";\r\n    }\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const addUserToServer = async (user) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/add/user\", user);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteItems = async (req) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/remove/item\", req);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteLocation = async (req) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/remove/location\", req);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n\r\nexport const returnItemToServer = async (req) => {\r\n  let data = null;\r\n  let status = \"success\";\r\n  try {\r\n    const res = await instance.post(\"/add/returnitem\", req);\r\n    data = res.data;\r\n  } catch (err) {\r\n    status = \"error\";\r\n    data = err.response.data;\r\n  } finally {\r\n    return {\r\n      status: status,\r\n      data: data\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}