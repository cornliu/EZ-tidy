{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\web\\\\Web2020-FinalProject\\\\frontend\\\\src\\\\MainArea.js\",\n    _s = $RefreshSig$();\n\nimport { locationData, locationData_MKS, locationData_Freezer, pathList } from './testcases';\nimport { Redirect, Route, Switch, useLocation, useParams } from \"react-router-dom\";\nimport { message } from 'antd';\nimport { ShelfTable1 } from './components/ShelfTable1';\nimport { useEffect, useState } from 'react';\nimport { Overview } from './components';\nimport { Container } from '@material-ui/core';\nimport { Location } from './components/Location';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defaultData, getLocationData } from './Connection';\nimport { Empty } from './components/Empty';\nimport { ShelfGrid } from './components/ShelfGrid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MainArea() {\n  _s();\n\n  const classes = useStyles(); // const { currentPath } = useParams();\n\n  let location = useLocation();\n  const [pageData, setPageData] = useState(defaultData);\n  const [path, setPath] = useState(location.pathname);\n\n  const updatePageData = async path => {\n    console.log(\"Getting Data for path:\", path);\n    setPageData(await getLocationData(path));\n    console.log(pageData.locationlist);\n  };\n\n  useEffect(() => {\n    setPath(location.pathname);\n  }, [location]);\n  useEffect(() => {\n    updatePageData(path);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), pageData.template === \"Location\" ? /*#__PURE__*/_jsxDEV(Location, {\n      path: path,\n      pageData: pageData,\n      getData: getLocationData,\n      setData: setPageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : pageData.template === \"ShelfTable\" ? /*#__PURE__*/_jsxDEV(ShelfGrid, {\n      path: path,\n      pageData: pageData,\n      getData: getLocationData,\n      setData: setPageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n      path: path,\n      pageData: pageData,\n      getData: getLocationData,\n      setData: setPageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainArea, \"XcoKH5g2h7gcUlsOuR513a81/1k=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = MainArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainArea\");","map":{"version":3,"sources":["C:/web/Web2020-FinalProject/frontend/src/MainArea.js"],"names":["locationData","locationData_MKS","locationData_Freezer","pathList","Redirect","Route","Switch","useLocation","useParams","message","ShelfTable1","useEffect","useState","Overview","Container","Location","makeStyles","defaultData","getLocationData","Empty","ShelfGrid","useStyles","theme","root","display","toolbar","alignItems","justifyContent","padding","spacing","mixins","content","flexGrow","MainArea","classes","location","pageData","setPageData","path","setPath","pathname","updatePageData","console","log","locationlist","template"],"mappings":"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","sourcesContent":["import { locationData, locationData_MKS, locationData_Freezer, pathList } from './testcases'\r\nimport { Redirect, Route, Switch, useLocation, useParams } from \"react-router-dom\"\r\nimport { message } from 'antd'\r\nimport { ShelfTable1 } from './components/ShelfTable1'\r\nimport { useEffect, useState } from 'react'\r\nimport { Overview } from './components'\r\nimport { Container } from '@material-ui/core'\r\nimport { Location } from './components/Location'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { defaultData, getLocationData } from './Connection'\r\nimport { Empty } from './components/Empty'\r\nimport { ShelfGrid } from './components/ShelfGrid'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainArea() {\r\n  const classes = useStyles();\r\n  // const { currentPath } = useParams();\r\n  let location = useLocation();\r\n  const [pageData, setPageData] = useState(defaultData);\r\n  const [path, setPath] = useState(location.pathname);\r\n\r\n  const updatePageData = async (path) => {\r\n    console.log(\"Getting Data for path:\", path)\r\n    setPageData(await getLocationData(path));\r\n    console.log(pageData.locationlist)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setPath(location.pathname);\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    updatePageData(path);\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      {pageData.template === \"Location\" ? (\r\n        <Location \r\n          path={path} \r\n          pageData={pageData} \r\n          getData={getLocationData}\r\n          setData={setPageData} />\r\n      ) : pageData.template === \"ShelfTable\" ? (\r\n        <ShelfGrid \r\n          path={path} \r\n          pageData={pageData} \r\n          getData={getLocationData}\r\n          setData={setPageData} />\r\n      ) : (\r\n        <Empty \r\n          path={path} \r\n          pageData={pageData} \r\n          getData={getLocationData}\r\n          setData={setPageData} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}